@model Recognize.ViewModels.InputOutputViewModel
<head>
    <link href="@Url.Content("~/Content/table.css")"
          rel="stylesheet" type="text/css" />
</head>

@using (Html.BeginForm("TestMany", "ManyPatterns", FormMethod.Post, new { @id = "formPost" }))
{
    <div>
        <div>
            <br />
            <label>Patterns</label>
            <br />
            <div class="patterns">
                @for (int k = 0; k < Model.patterns.Length / 64; k++) //k<10
                {
                    <div class="patterns">
                        <table class="container">
                            @for (int i = 0; i < 64; i = i + 8)
                            {
                                <tr>
                                    @for (int j = i; j < i + 8; j++)
                                    {
                                        var color = "#d9d9d9";
                                        if (Model.patterns[k, j] == 1) { color = "black"; }
                                        else { color = "#d9d9d9"; }
                                        <td class="pattern-td" style="background-color: @color"></td>
                                    }
                                </tr>
                            }
                        </table>
                    </div>
                }
            </div>
        </div>
        <br />
        <div class="matrix">
            <label>Input</label>
            <table class="container">
                @for (int i = 0; i < 64; i = i + 8)
                {
                    <tr>
                        @for (int j = i; j < i + 8; j++)
                        {
                            var name = "neuron" + j.ToString();
                            var nameId = "idneuron" + j.ToString();

                            var color = "#d9d9d9";
                            if (Model.Input.neurons[j] == 1) { color = "#FF1493"; }
                            else { color = "#d9d9d9"; }
                            <td><input name="@name" type="button" class="bit" style="background-color: @color !important" onload="getColor(this)" onclick="changeColor(this)" />@Html.HiddenFor(model => model.Input.neurons[j], new { id = nameId })</td>
                        }
                    </tr>
                }
            </table>
        </div>
        <div class="matrix">
            <div class="network-outputs">
                <label>Hopfield</label>
                <table class="container">
                    @for (int i = 0; i < 64; i = i + 8)
                {
                        <tr>
                            @for (int j = i; j < i + 8; j++)
                            {
                                var color = "#d9d9d9";
                                if (Model.HopfieldOutput.neurons[j] == 1) { color = "black"; }
                                else { color = "#d9d9d9"; }
                                <td class="out" style="background-color: @color"></td>
                            }
                        </tr>
                    }
                </table>
            </div>
            <div class="network-outputs">
                <label>ART 1</label>
                <table class="container">
                    @for (int i = 0; i < 64; i = i + 8)
                    {
                        <tr>
                            @for (int j = i; j < i + 8; j++)
                            {
                                var color = "#d9d9d9";
                                if (Model.ARTOutput.neurons[j] == 1) { color = "black"; }
                                else { color = "#d9d9d9"; }
                                <td class="out" style="background-color: @color"></td>
                            }
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
    <div class="buttons">
        <br />
        <div class="buttons-center">
            <button type="submit" name="Clear" class="main-button" formaction="@Url.Action("Index","ManyPatterns")">Clear</button>
            <button type="submit" name="SelectAll" class="main-button" formaction="@Url.Action("Index","ManyPatterns", new { selection = true})">Select All</button>
            <button type="submit" name="Train" class="main-button" formaction="@Url.Action("TrainMany","ManyPatterns")">Train</button>
            <button type="submit" name="Test" id="buttonPost" class="main-button" formaction="@Url.Action("TestMany","ManyPatterns")">Test</button>
        </div>
    </div>
    if (ViewBag.Message != "")
    {
        <div class="alert-message warning">
            <p class="alert alert-info" id="successMessage" style="margin-top:1em;">@ViewBag.Message</p>
        </div>
    }
    @*<div class="matrix">
            <label>Weights</label>
            <table class="container">
                @for (int i = 0; i < 64; i++)
                    {
                    <tr>
                        @for (int j = 0; j < 64; j++)
                        {

                            <td class="out">@Model.Weights[i,j].ToString("0.00")</td>
                        }
                    </tr>
                }
            </table>
        </div>*@
}

<script>
    function changeColor(id) {
        debugger;
        var nameId = "#id" + id.name;
        var hiddenElement = $(nameId);

        if (hiddenElement[0].value == 0) {
            id.style.backgroundColor = "#FF1493";
            hiddenElement[0].value = 1;
        }
        else {
            id.style.backgroundColor = "#d9d9d9";
            hiddenElement[0].value = 0;
        }
    }

    function value(id) {
        if (id.style.backgroundColor == "black") {
            return 1;
        } else {
            return 0;
        }
    }

    function getColor(id) {
        var nameId = "#id" + id.name;

        if ($(nameId).value == 1) {
            return "#FF1493";
        }
        else {
            return "#d9d9d9";
        }
    }
</script>